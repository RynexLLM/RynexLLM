"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[171],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={id:"basic-text-generation",title:"Example: Simple Text Generation",sidebar_label:"Simple Text Generation"},o=void 0,l={unversionedId:"basic-text-generation",id:"basic-text-generation",title:"Example: Simple Text Generation",description:"Example: Creating a Personalized Greeting",source:"@site/docs/basic_generation.md",sourceDirName:".",slug:"/basic-text-generation",permalink:"/docs/basic-text-generation",draft:!1,editUrl:"https://github.com/sobelio/llm-chain/tree/main/docs/docs/basic_generation.md",tags:[],version:"current",frontMatter:{id:"basic-text-generation",title:"Example: Simple Text Generation",sidebar_label:"Simple Text Generation"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/introduction"}},s={},c=[{value:"Example: Creating a Personalized Greeting",id:"example-creating-a-personalized-greeting",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"example-creating-a-personalized-greeting"},"Example: Creating a Personalized Greeting"),(0,a.kt)("p",null,"In this example, we demonstrate how to use LLM-chain to create a personalized greeting using a simple chain of prompts."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'let exec = Executor::new_default();\nlet chain = Step::new(\n    Model::ChatGPT3_5Turbo,\n    [\n        (Role::System, "You are a bot for making personalized greetings"),\n        (Role::User, "Make a personalized greet for Joe"),\n    ]\n).to_chain();\nlet res = chain.run(Parameters::new(), exec).await.unwrap();\nprintln!("{:?}", res);\n')),(0,a.kt)("p",null,"Here's a step-by-step explanation of the code:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create an ",(0,a.kt)("inlineCode",{parentName:"li"},"Executor")," using the ",(0,a.kt)("inlineCode",{parentName:"li"},"new_default()")," function. The ",(0,a.kt)("inlineCode",{parentName:"li"},"Executor")," is responsible for managing the execution of the chain."),(0,a.kt)("li",{parentName:"ol"},"Define a ",(0,a.kt)("inlineCode",{parentName:"li"},"Step")," using the ",(0,a.kt)("inlineCode",{parentName:"li"},"Step::new()")," function, providing the model (",(0,a.kt)("inlineCode",{parentName:"li"},"Model::ChatGPT3_5Turbo"),") and an array of tuples representing the conversation between the system and user."),(0,a.kt)("li",{parentName:"ol"},"Convert the ",(0,a.kt)("inlineCode",{parentName:"li"},"Step")," into a chain using the ",(0,a.kt)("inlineCode",{parentName:"li"},"to_chain()")," function."),(0,a.kt)("li",{parentName:"ol"},"Run the chain using the ",(0,a.kt)("inlineCode",{parentName:"li"},"run()")," function, passing in the parameters and the executor. The await keyword is used since the function is asynchronous."),(0,a.kt)("li",{parentName:"ol"},"Once the chain completes, the result is unwrapped and printed to the console.")),(0,a.kt)("p",null,"In this example, the LLM-chain library interacts with the ChatGPT model to create a personalized greeting for Joe. This is just a simple demonstration of how LLM-chain can be used to interact with LLMs and perform more complex tasks by chaining prompts. Explore the documentation and examples for more advanced use cases."))}m.isMDXComponent=!0}}]);